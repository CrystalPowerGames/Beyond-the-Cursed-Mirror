# --------------------------------------
# General Rules
# --------------------------------------

# obtain a list of segments from the *.c files in bin directory
SEGMENTS := \
    $(notdir $(basename $(wildcard bin/*.c))) \
    $(addprefix $(VERSION)/,$(notdir $(basename $(wildcard bin/$(VERSION)/*.c)))) \
    $(addsuffix _skybox,$(notdir $(basename $(wildcard textures/skyboxes/*.png))))

# Directories containing PNG files
TEXTURE_DIRS := \
    $(wildcard textures/*/) \
    $(filter %/,$(wildcard actors/*/))

# NOTE: textures assume naming convention "texture.<encoding>.png" generates "texture.<encoding>"

ACTOR_GROUPS := \
    group0  \
    group14 \
    group17 \
    common0 \
    common1

LEVEL_FILES := $(addsuffix leveldata,$(LEVEL_DIRS))

LEVEL_ELF_FILES := $(foreach level_dir,$(LEVEL_DIRS),$(BUILD_DIR)/levels/$(level_dir)leveldata.elf)

SEG_FILES := \
    $(SEGMENTS:%=$(BUILD_DIR)/bin/%.elf) \
    $(ACTOR_GROUPS:%=$(BUILD_DIR)/actors/%.elf) \
    $(LEVEL_FILES:%=$(BUILD_DIR)/levels/%.elf)

YAY0_FILES := \
    $(SEGMENTS:%=$(BUILD_DIR)/bin/%.szp) \
    $(ACTOR_GROUPS:%=$(BUILD_DIR)/actors/%.szp) \
    $(LEVEL_FILES:%=$(BUILD_DIR)/levels/%.szp)

YAY0_OBJ_FILES := $(YAY0_FILES:.szp=.szp.o)


# --------------------------------------
# Actor Rules
# --------------------------------------

# Actor Directories
KOOPA_DIRS       := 
MR_I_DIRS        := mario2
COINS_DIRS       := mist explosion butterfly coin warp_pipe door bowser_key flame blue_fish pebble leaves mario_cap breath_meter power_meter mushroom_1up star sand dirt transparent_star white_particle wooden_signpost tree yoshi
AMP_DIRS         := blue_coin_switch chuckya amp cannon_lid cannon_base cannon_barrel purple_switch checkerboard_platform heart flyguy breakable_box exclamation_box vanilla_exclamation_box goomba bobomb metal_box exclamation_box_outline test_platform koopa_shell
MARIO_DIRS       := mario grindel bully motos rotating_block_fire_bars bubble bowser_flame impact_smoke impact_ring snufit boo scuttlebug snowman spindrift mr_i_eyeball bowser bomb mr_i_iris  walk_smoke burn_smoke small_water_splash water_wave sparkle water_splash white_particle_small sparkle_animation king_bobomb koopa_flag koopa chuckya piranha_plant whomp chillychief moneybag wiggler wiggler_body_part lakitu_enemy spiny_egg spiny thwomp bullet_bill heave_ho

# Actor Textures
AMP_CHUCKYA_TEXTURES            := $(foreach dir,$(AMP_DIRS),        $(wildcard actors/$(dir)/*.png))
COINS_PIPE_TEXTURES             := $(foreach dir,$(COINS_DIRS),      $(wildcard actors/$(dir)/*.png))
KOOPA_LOG_TEXTURES              := $(foreach dir,$(KOOPA_DIRS),      $(wildcard actors/$(dir)/*.png))
MARIO_WATER_TEXTURES            := $(foreach dir,$(MARIO_DIRS),      $(wildcard actors/$(dir)/*.png))
MR_I_SWOOP_TEXTURES             := $(foreach dir,$(MR_I_DIRS),       $(wildcard actors/$(dir)/*.png))

# Actor dependencies
$(BUILD_DIR)/actors/group0.o:  $(MARIO_WATER_TEXTURES:%.png=$(BUILD_DIR)/%.inc.c)
$(BUILD_DIR)/actors/group14.o: $(KOOPA_LOG_TEXTURES:%.png=$(BUILD_DIR)/%.inc.c)
$(BUILD_DIR)/actors/group17.o: $(MR_I_SWOOP_TEXTURES:%.png=$(BUILD_DIR)/%.inc.c)
$(BUILD_DIR)/actors/common0.o: $(AMP_CHUCKYA_TEXTURES:%.png=$(BUILD_DIR)/%.inc.c)
$(BUILD_DIR)/actors/common1.o: $(COINS_PIPE_TEXTURES:%.png=$(BUILD_DIR)/%.inc.c)

# Actor Elf Files
$(BUILD_DIR)/actors/group0.elf:  SEGMENT_ADDRESS := 0x04000000
$(BUILD_DIR)/actors/group14.elf: SEGMENT_ADDRESS := 0x06000000
$(BUILD_DIR)/actors/group17.elf: SEGMENT_ADDRESS := 0x06000000
$(BUILD_DIR)/actors/common0.elf: SEGMENT_ADDRESS := 0x08000000
$(BUILD_DIR)/actors/common1.elf: SEGMENT_ADDRESS := 0x03000000

# --------------------------------------
# Level Rules
# --------------------------------------

$(BUILD_DIR)/levels/%/leveldata.elf: SEGMENT_ADDRESS := 0x07000000

# TODO: Generate these rules from the level configs?

define level_rules =
    $(1)_SEG7_FILES     := $$(patsubst %.png,%.inc.c,$$(wildcard levels/$(1)/*.png))
    $$(BUILD_DIR)/levels/$(1)/leveldata.o: $$(addprefix $$(BUILD_DIR)/,$$($(1)_SEG7_FILES))
endef

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(MAKECMDGOALS),distclean)
$(BUILD_DIR)/level_rules.mk: levels/level_rules.mk levels/level_defines.h
	$(call print,Preprocessing level make rules:,$<,$@)
	$(V)$(CPP) $(CPPFLAGS) $(VERSION_CFLAGS) -I . -o $@ $<
include $(BUILD_DIR)/level_rules.mk
endif
endif

# --------------------------------------
# Extra Level Rules
# --------------------------------------
$(eval $(call level_rules,intro)) # Intro (Super Mario 64 Logo)
$(eval $(call level_rules,menu)) # Menu (File Select)

# --------------------------------------
# Texture Bin Rules
# --------------------------------------

# Others
SEGMENT2_TEXTURES               := $(wildcard $(TEXTURE_DIR)/segment2/*.png)
TITLE_SCREEN_BG_TEXTURES        := $(wildcard $(TEXTURE_DIR)/title_screen_bg/*.png)
EFFECT_TEXTURES                 := $(wildcard $(TEXTURE_DIR)/effect/*.png)

# Texture Files
$(BUILD_DIR)/bin/segment2.o:        $(SEGMENT2_TEXTURES:%.png=$(BUILD_DIR)/%.inc.c)
$(BUILD_DIR)/bin/title_screen_bg.o: $(TITLE_SCREEN_BG_TEXTURES:%.png=$(BUILD_DIR)/%.inc.c)
$(BUILD_DIR)/bin/effect.o:          $(EFFECT_TEXTURES:%.png=$(BUILD_DIR)/%.inc.c)

# Others
$(BUILD_DIR)/bin/segment2.elf:           SEGMENT_ADDRESS := 0x02000000
$(BUILD_DIR)/bin/title_screen_bg.elf:    SEGMENT_ADDRESS := 0x0A000000
$(BUILD_DIR)/bin/debug_level_select.elf: SEGMENT_ADDRESS := 0x07000000
$(BUILD_DIR)/bin/effect.elf:             SEGMENT_ADDRESS := 0x0B000000
# EU segment 19 translations
$(BUILD_DIR)/bin/eu/translation_de.elf:  SEGMENT_ADDRESS := 0x19000000
$(BUILD_DIR)/bin/eu/translation_en.elf:  SEGMENT_ADDRESS := 0x19000000
$(BUILD_DIR)/bin/eu/translation_fr.elf:  SEGMENT_ADDRESS := 0x19000000

# --------------------------------------
# Skybox Rules
# --------------------------------------

$(BUILD_DIR)/bin/%_skybox.c: textures/skyboxes/%.png
	$(call print,Splitting:,$<,$@)
	$(V)$(SKYCONV) --type sky --split $^ $(BUILD_DIR)/bin

$(BUILD_DIR)/bin/%_skybox.elf: SEGMENT_ADDRESS := 0x0A000000

# --------------------------------------
# Misc Rules
# --------------------------------------

# intro and ipl3 textures are not compressed
INTRO_RAW_FILES              := $(wildcard $(TEXTURE_DIR)/intro_raw/*.png)
$(BUILD_DIR)/src/goddard/renderer.o: $(addprefix $(BUILD_DIR)/,$(patsubst %.png,%.inc.c,$(INTRO_RAW_FILES)))

IPL3_TEXTURE_FILES          := $(wildcard $(TEXTURE_DIR)/ipl3_raw/*.png)
IPL3_RAW_FILES              := $(addprefix $(BUILD_DIR)/,$(patsubst %.png,%,$(IPL3_TEXTURE_FILES)))

CRASH_TEXTURE_FILES         := $(wildcard $(TEXTURE_DIR)/crash_custom/*.png)
CRASH_TEXTURE_C_FILES       := $(addprefix $(BUILD_DIR)/,$(patsubst %.png,%.inc.c,$(CRASH_TEXTURE_FILES)))
